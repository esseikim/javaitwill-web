<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!-- xml에 mlns(main space)가 설정되어 있어야  mvc, context,... 태그 사용 가능. 

xmlns 속성은 보통 다양한 라이브러리나 프레임워크에서 제공하는 태그들을 사용하기 위해 설정. 
Spring MVC에서도 이러한 방식으로 네임스페이스를 사용하여 라이브러리에서 제공하는 태그들을 XML 문서에서 사용할 수 있게 함. -->
    
    <!-- Spring MVC 설정들을 애너테이션(annotation) 기반으로 처리 -->
    <mvc:annotation-driven />
    
    <!-- Spring MVC에서 dispatcherServlet이 처리하지 않는 
    정적 요청에 필요한 파일들(image, css, javascript, ...)의 폴더 위치. 
    요청 주소가 server:port/contextRoot/static/.. 으로 시작하는 요청들에 대해서는
    dispatcherServlet이 컨트롤러 메서드를 호출하지 않고,
    해당 폴더 아래에 있는 파일들을 클라이언트로 바로 전송.
    -->
    <mvc:resources location="/static" mapping="/**" /><!-- /static 경로에 위치한 정적 자원들을 요청, URL 패턴인 /**와 매칭시켜서 처리. 모든 URL 패턴(/**). static 폴더 밑에 하위폴더를 찾아감. -->
    
    <!-- View Resolver: Spring MVC에서 사용하는 뷰(JSP, ...)를 찾기 위한 설정 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"><!-- Dispacherservlet이 생성될 때 해당 클래스의 객체도 생성됨. -->
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- 특정 패키지 아래에 선언된 컴포넌트 애너테이션(@Controller, @RestController)이
    선언된 클래스들을 bean으로 관리: 
    컨트롤러 클래스들을 작성하는 패키지 이름. -->
    <context:component-scan base-package="com.itwill.spring2.web" />

<!--  Spring: 서블릿을 사용. 서블릿에서 사용하는 환경설정 정보가 담겨져 있는 파일. -->    
</beans>